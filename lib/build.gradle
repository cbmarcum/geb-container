/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details on building Java & JVM projects, please refer to
 * https://docs.gradle.org/8.14/userguide/building_java_projects.html
 * in the Gradle documentation.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

archivesBaseName = 'geb-container'
version = '0.0.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

/* see gradle/<module>.versions.toml for coordinates and versions
   implementation is used internally, and not exposed to consumers on their own compile classpath.
   api is exported to consumers, that is to say found on their compile classpath.
*/
dependencies {
    implementation libs.groovy

    // Use the awesome Spock testing and specification framework even with Java
    // testImplementation libs.spock.core
    // testImplementation libs.junit
    implementation libs.geb.spock

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // until fixed for versions.toml
    // api 'org.gebish:geb-spock'
    // api project(':grails-testing-support-core')
    // api project(':grails-datamapping-core')

    api libs.testcontainers.selenium
    api libs.selenium.chrome.driver
    api libs.selenium.remote.driver

    implementation libs.selenium.support

    implementation "org.slf4j:slf4j-api:2.0.17"
    implementation "org.slf4j:slf4j-simple:2.0.17"

    // Added to be able to resolve the geb version from the BOM in the resolveVersions task
    // compileOnly 'org.gebish:geb-spock'



}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
/*
compileJava {
    options.release = 17
}
*/
java {
    withJavadocJar()
    withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
